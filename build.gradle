import java.time.Instant

plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle.forge' version '2.3-SNAPSHOT'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

def build = System.getenv('BUILD_NUMBER') ?: 'CUSTOM'

group = 'info.tehnut'
version = "1.1.0-$build"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url 'https://maven.tterrag.com' }
    maven { url 'https://dvs1.progwml6.com/files/maven' }
    //maven { url 'https://tehnut.info/maven' }
}

dependencies {
    implementation 'org.checkerframework:checker-qual:3.5.0'
    // Full jar, we use internals (AbstractTexture, Quad)
    deobfProvided 'team.chisel.ctm:CTM:MC1.12.2-1.0.2.31'
    deobfProvided 'mezz.jei:jei_1.12.2:4.15.0.292:api'
    runtime 'team.chisel.ctm:CTM:MC1.12.2-1.0.2.31'
    runtime 'mezz.jei:jei_1.12.2:4.15.0.292'
}

minecraft {
    forgeVersion = '1.12.2-14.23.5.2847'
    mappings = 'stable_39'
    runDir = 'run'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info', 'version.properties'
        expand 'version': version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info', 'version.properties'
    }
}

jar.manifest.attributes(
    'Specification-Title': rootProject.name,
    'Specification-Vendor': group,
    'Specification-Version': 1,
    'Implementation-Title': rootProject.name,
    'Implementation-Vendor': group,
    'Implementation-Version': version,
    'Implementation-Timestamp': Instant.now().toString()
)

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.fork = true
    options.verbose = true
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:all'
}

tasks.build.dependsOn sourceJar

publishing {
    tasks.publish.dependsOn 'build'

    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
        }
    }

    repositories {
        def mavenRepo = project.findProject('maven_repo')
        if (mavenRepo) {
            maven { url mavenRepo }
        } else mavenLocal()
    }
}


curseforge {
    apiKey = "${project.findProperty 'curse_key_TehNut'}"
    project {
        id = '257573'
        changelog = changelog()
        releaseType = 'release'
        addGameVersion '1.12.1'
        addGameVersion '1.12.2'
        addArtifact sourceJar
    }
}

private static String changelog() {
    String changelog = ''
    int lines = 0
    boolean done = false
    new File('changelog.txt').eachLine {
        if (done || it == null) {
            return
        }
        if (lines < 3) {
            lines++
            if (it.startsWith('---')) {
                return
            }
        }
        if (!it.startsWith('---')) {
            changelog += "$it" + (lines < 3 ? ':\n\n' : '\n')
            return
        }
        done = true
        return
    }
    return changelog
}
